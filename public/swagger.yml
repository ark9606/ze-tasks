swagger: "2.0"
info:
  title: "Service API"
  description: "Service for processing files in predefined flow steps"
  version: "1.0.0"
  contact:
    email: "arkasha9606@gmail.com"
host: "localhost:3000"
tags:
- name: "service"
  description: "Service contains flow steps for processing files"
paths:
  /service:
    put:
      tags:
      - "service"
      summary: "Create a new service to DB"
      description: ""
      operationId: "createService"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "steps"
        required: true
        schema:
          $ref: "#/definitions/Steps"
      responses:
        200:
          description: "successful created"
          schema:
            $ref: '#/definitions/Service'
        201:
          description: "successful found"
          schema:
            $ref: '#/definitions/Service'
        400:
          description: "There are undefined flowSteps"
      security:
      - BearerAuth: []

  /service/{serviceId}/execute:
    post:
      tags:
      - "service"
      summary: "Process file in flow steps"
      description: "Process file in flow steps"
      operationId: "processFile"
      consumes:
      - "application/x-www-form-urlencoded"
      parameters:
      - name: "serviceId"
        in: "path"
        description: "ID of service, that was previously created"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "File was successfully processed"
        404:
          description: "Service not found"
      security:
      - BearerAuth: []
      
  /service/{serviceId}:
    patch:
      tags:
      - "service"
      summary: "Change state of service"
      description: "Change state of service with action"
      operationId: "changeServiceState"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "serviceId"
        in: "path"
        description: "ID of service, that was previously created"
        required: true
        type: "integer"
        format: "int64"
      - name: "action"
        in: "formData"
        description: "action name"
        required: true
        type: "string"        
      responses:
        200:
          description: "State was successfully changed"
        400:
          description: "You cannot change state with this action now"
        404:
          description: "Service or action not found"
      security:
      - BearerAuth: []
  
securityDefinitions:
  BearerAuth:
    type: apiKey
    name: Authorization
    in: header
    
definitions:
  Service:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      # steps:
      #   $ref: "#/definitions/Steps"
      steps:
        type: "array"
        items:
          type: "string"
        example: ['upperCase', 'lowerCase', 'removeSpaces', 'gzip', 'ungzip', 'encrypt', 'decrypt']
      state:
        type: "string"
        example: "deployed"          
    xml:
      name: "Service"
  Steps:
    type: "object"
    required:
    - "flowSteps"
    properties:
      flowSteps:
        type: 'array'
        items:
          type: "string"
        example: ['upperCase', 'lowerCase', 'removeSpaces', 'gzip', 'ungzip', 'encrypt', 'decrypt']
    xml:
      name: "Steps"   
      
externalDocs:
  description: "Github repo"
  url: "https://github.com/ark9606/node-js-school-private"